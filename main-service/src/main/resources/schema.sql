
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS comment_events CASCADE;
/**/

CREATE TABLE IF NOT EXISTS categories (
                                     сategory_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                     сategory_name VARCHAR(255) NOT NULL,
                                     CONSTRAINT pk_сategory PRIMARY KEY (сategory_id),
                                     CONSTRAINT uq_сategory_name UNIQUE (сategory_name)
);

CREATE TABLE IF NOT EXISTS users (
                                    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                    user_name VARCHAR(255) NOT NULL,
                                    user_email VARCHAR(255) NOT NULL,
                                    CONSTRAINT pk_user PRIMARY KEY (user_id),
                                    CONSTRAINT uq_user_name UNIQUE (user_name),
                                    CONSTRAINT uq_user_email UNIQUE (user_email)
);

CREATE TABLE IF NOT EXISTS events (
                                     event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                     event_annotation VARCHAR(2000) NOT NULL,
                                     category_id BIGINT REFERENCES categories(сategory_id) NOT NULL,
                                     event_description VARCHAR(7000) NOT NULL,
                                     event_date TIMESTAMP WITHOUT TIME ZONE,
                                     event_location_lat INT NOT NULL,
                                     event_location_lon INT NOT NULL,
                                     event_paid BOOLEAN,
                                     event_participant_limit INT NOT NULL,
                                     event_request_moderation BOOLEAN,
                                     event_title VARCHAR(120) NOT NULL,
                                     event_created_on TIMESTAMP WITHOUT TIME ZONE,
                                     event_published_on TIMESTAMP WITHOUT TIME ZONE DEFAULT NULL,
                                     initiator_id BIGINT REFERENCES users(user_id) NOT NULL,
                                     event_confirmed_requests INT DEFAULT 0,
                                     event_state VARCHAR(10) NOT NULL DEFAULT 'PENDING',
                                     CONSTRAINT pk_event PRIMARY KEY (event_id),
                                     CONSTRAINT uq_event_title UNIQUE (event_title)
);

CREATE TABLE IF NOT EXISTS requests (
                                      request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                      request_created TIMESTAMP WITHOUT TIME ZONE,
                                      request_state VARCHAR(10) NOT NULL DEFAULT 'PENDING',
                                      requester_id BIGINT REFERENCES users(user_id) NOT NULL,
                                      event_id BIGINT REFERENCES events(event_id) NOT NULL,
                                      CONSTRAINT pk_request PRIMARY KEY (request_id)
);

CREATE TABLE IF NOT EXISTS compilations (
                                      compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                      compilation_title VARCHAR(120) NOT NULL,
                                      compilation_pinned BOOLEAN NOT NULL DEFAULT false,
                                      CONSTRAINT pk_compilation PRIMARY KEY (compilation_id),
                                      CONSTRAINT uq_compilation_title UNIQUE (compilation_title)
);

CREATE TABLE IF NOT EXISTS compilations_events (
                                      event_id       BIGINT REFERENCES events (event_id)             NOT NULL,
                                      compilation_id BIGINT REFERENCES compilations (compilation_id) NOT NULL,
                                      CONSTRAINT uq_compilations_events UNIQUE (event_id,compilation_id)
);

CREATE TABLE IF NOT EXISTS comment_events (
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text  VARCHAR(255) NOT NULL,
    event_id BIGINT REFERENCES events (event_id) NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (comment_id),
    CONSTRAINT uq_comment_event_id UNIQUE (event_id)
);
